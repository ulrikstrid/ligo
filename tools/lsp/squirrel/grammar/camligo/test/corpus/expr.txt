=========
paren
=========

let x = (foo (42))

---

(source_file
  (let_decl
    (var_pattern (NameDecl))
    (paren_expr (fun_app (Name) (paren_expr (Int))))))

=========
tuple
=========

let x = (1, "foo", 3)
let y = 1, "foo", 3

---

(source_file
  (let_decl
    (var_pattern (NameDecl))
    (paren_expr
      (tup_expr (Int) (tup_expr (String) (Int)))))
  (let_decl
    (var_pattern (NameDecl))
    (tup_expr (Int) (tup_expr (String) (Int)))))

=========
single paren
=========

let x = (1)

---

(source_file
  (let_decl
    (var_pattern (NameDecl))
    (paren_expr (Int))))

=========
tuples and parens
=========

let x = ((1, "foo", 3))
let y = ((1), ("foo"), 3)

---

(source_file
  (let_decl
    (var_pattern (NameDecl))
    (paren_expr
      (paren_expr
        (tup_expr (Int) (tup_expr (String) (Int))))))
  (let_decl
    (var_pattern (NameDecl))
    (paren_expr
      (tup_expr (paren_expr (Int)) (tup_expr (paren_expr (String)) (Int))))))
